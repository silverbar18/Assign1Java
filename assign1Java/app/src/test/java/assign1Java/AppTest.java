/*
 * This Java source file was generated by the Gradle 'init' task.
 */
package assign1Java;

import org.junit.jupiter.api.Test;
import org.junit.jupiter.api.DisplayName;
import static org.junit.jupiter.api.Assertions.*;

class AppTest {
    App classUnderTest = new App();

    //IMPERATIVE TESTING
    @Test @DisplayName("Imperative Function(Negatuve)") 
    void test_isPerfectNumber_Imperative_Negative() {
        assertEquals(false, classUnderTest.isPerfectNumber_Imperative(-1));
        assertEquals(false, classUnderTest.isPerfectNumber_Imperative(-6));

    }

    @Test @DisplayName("Imperative Function(Positive_NotPerfect)") 
    void test_isPerfectNumber_Imperative_Positve_NotPerfect() {
        assertEquals(false, classUnderTest.isPerfectNumber_Imperative(0));
        assertEquals(false, classUnderTest.isPerfectNumber_Imperative(1));
        assertEquals(false, classUnderTest.isPerfectNumber_Imperative(10));
        assertEquals(false, classUnderTest.isPerfectNumber_Imperative(20));
    }

    @Test @DisplayName("Imperative Function(Positive_Perfect)") 
    void test_isPerfectNumber_Imperative_Positve_Perfect() {
        assertEquals(true, classUnderTest.isPerfectNumber_Imperative(6));
        assertEquals(true, classUnderTest.isPerfectNumber_Imperative(28));
    }

    //FUNCTIONAL TESTING
    @Test @DisplayName("Functional Function(Negative)") 
    void test_isPerfectNumber_Functional_Negative() {
        assertEquals(false, classUnderTest.isPerfectNumber_Functional(-1));
        assertEquals(false, classUnderTest.isPerfectNumber_Functional(-6));
    }

    @Test @DisplayName("Functional Function(Positive_NotPerfect)") 
    void test_isPerfectNumber_Functional_Positive_NotPerfect() {
        assertEquals(false, classUnderTest.isPerfectNumber_Functional(0));
        assertEquals(false, classUnderTest.isPerfectNumber_Functional(1));
        assertEquals(false, classUnderTest.isPerfectNumber_Functional(10));
        assertEquals(false, classUnderTest.isPerfectNumber_Functional(20));
    }

    @Test @DisplayName("Functional Function(Positive_Perfect)") 
    void test_isPerfectNumber_Functional_Positive_Perfect() {
        assertEquals(true, classUnderTest.isPerfectNumber_Functional(6));
        assertEquals(true, classUnderTest.isPerfectNumber_Functional(28));
    }
}
